// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String    @id @unique
    email     String    @unique
    name      String?
    projects  Project[]
    createdAt DateTime  @default(now())
    updatedAt DateTime?
}

model Project {
    id                     String          @id @unique @default(uuid())
    publicId               String          @unique
    name                   String
    description            String?
    website                String?
    logo                   String?
    userId                 String
    feedbackTypes          FeedbackTypes[]
    user                   User            @relation(fields: [userId], references: [id])
    isPublic               Boolean         @default(false)
    isNotificationsEnabled Boolean         @default(true)
    isUpVotesEnabled       Boolean         @default(true)
    disableFeedback        Boolean         @default(false)
    feedbacks              Feedbacks[]
    createdAt              DateTime        @default(now())
    updatedAt              DateTime        @updatedAt
}

model FeedbackTypes {
    id        String      @id @unique @default(uuid())
    name      String
    emoji     String
    projectId String
    project   Project     @relation(fields: [projectId], references: [id])
    feedbacks Feedbacks[]
    createdAt DateTime    @default(now())
    updatedAt DateTime    @updatedAt
}

model Feedbacks {
    id             String        @id @unique @default(uuid())
    projectId      String
    project        Project       @relation(fields: [projectId], references: [id])
    typeId         String
    type           FeedbackTypes @relation(fields: [typeId], references: [id])
    message        String
    upVotes        Int           @default(0)
    downVotes      Int           @default(0)
    feedbackerInfo Json?
    createdAt      DateTime      @default(now())
    updatedAt      DateTime      @updatedAt
}
